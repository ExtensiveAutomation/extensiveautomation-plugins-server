<?xml version="1.0" encoding="utf-8" ?>
<file>
<properties><descriptions><description><value>admin</value><key>author</key></description><description><value>25/03/2016 08:23:48</value><key>creation date</key></description><description><value>Just a basic sample.</value><key>summary</key></description><description><value>None.</value><key>prerequisites</key></description><description><value><comments /></value><key>comments</key></description><description><value>myplugins</value><key>libraries</key></description><description><value>myplugins</value><key>adapters</key></description><description><value>Writing</value><key>state</key></description><description><value>TESTCASE</value><key>name</key></description><description><value>REQ_01</value><key>requirement</key></description></descriptions><inputs-parameters><parameter><color /><description /><type>bool</type><name>DEBUG</name><value>False</value><scope>local</scope></parameter><parameter><color /><description /><type>snapshot-image</type><name>IMG_1</name><value>iVBORw0KGgoAAAANSUhEUgAAABUAAAATCAYAAAB/TkaLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAWVJREFUOI21lLuOgkAUhn82WxFiAhZIKEAbH8LXNSb4BoK1iTyBocJC44AgmZix42yzmh0us2ZX//Kck2/mXDUiIrxYH68GAsCnynk6nZCmKQ6HAwDAdV2Mx2PYtq2Eal3pX69XbDYb6LqO6XSKwWAAAOCcY7fbQQiB2WwGwzC6qdQQ55yWyyXled50PZTnOQVBQJzzTr8EreuawjCkoiikoNVqRVEUSbbz+UxRFFFd1y2o1CjGGAzDgGVZypoBwHA4hK7rYIyp099ut5RlWW/aTTHGKI5j9U+PxyNM02w9HIYh1ut1y26a5mMyfkoaqe8at4LSNO0tg6ZpLZv0U8dxUFVVL6Cpy+WC0Wikhvq+jyRJnoYmSQLP89RQ27YhhEBZllKQ7/uYTCaSrSgKCCG6t6vZudvtRvP5/NfhXywWJITo9D+1pve5LcvyqTXthN51Pyj7/R4A4Hne3w/Kf/WWe/oW6Be+/blmmLOuBQAAAABJRU5ErkJggg==</value><scope>local</scope></parameter><parameter><color /><description /><type>snapshot-image</type><name>IMG_1_1</name><value>iVBORw0KGgoAAAANSUhEUgAAABYAAAAXCAYAAAAP6L+eAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAUNJREFUOI211ctKw0AUBuB/Rt9AEKQpKAgubHVjm+hKrAhSFB9AEN/QCxVcWILgpUgFTWrRQoVGA32AGuqix4UGaieZZJr0Xx6Gbw6TMxl2enlNc7MzyC0tgDGGJCEivLYd1O03MKvZosV5LRE4mo7bBfM8j1JV/8IngSrDT88WLPsl1trpuOhV1cTNXQ0A0Ot9wdDXpOtjdTyMAkDVNEEk/zSR8CgKAKWtzcjRlMJB6M52CXpBfgxSOAyNOls/gXMchMqS1TI4Pjr8VxM6fqg/KqEA4Hx8CjUB7ve/ldCwCPCGoWN1Ja+EZLWMUBMuCOcMe+VdAL83zQ9jDAf7ZeRzy7E2C5wKHx/unIhwclaBZTfGh6Nwu9EcH5bh55WLZHAYrhcLkXDsH/1gQLi9r2GKc6wbxfRg1UzuBXl33NTRjtvFD02chw7oAj1zAAAAAElFTkSuQmCC</value><scope>local</scope></parameter><parameter><color /><description /><type>float</type><name>IMG_1_SIMILAR</name><value>0.7</value><scope>local</scope></parameter><parameter><color /><description /><type>float</type><name>TIMEOUT_GUI</name><value>15.0</value><scope>local</scope></parameter></inputs-parameters><agents><agent><description /><type>sikulixserver</type><name>AGENT_GUI</name><value>agent.win.sikulix01</value></agent></agents><probes><probe><active>False</active><args /><name>probe01</name><type>default</type></probe></probes><outputs-parameters><parameter><color /><description /><type>float</type><name>TIMEOUT</name><value>1.0</value><scope>local</scope></parameter></outputs-parameters></properties>
<testdefinition><![CDATA[
def description(self):
	# testcase description
	self.setPurpose(purpose="GUI_Automation_Capture")

	# steps description
	self.step1 = self.addStep(expected="Action executed with success", description="", summary="", enabled=True)

def prepare(self):
	# adapters and libraries definitions
	self.ADP_GUI = SutAdapters.GUI.Sikuli(parent=self, agent=agent('AGENT_GUI'), debug=input('DEBUG'))

def cleanup(self, aborted):
	pass

def definition(self):
	##CAPTURE>
	if self.step1.isEnabled():
		self.step1.start()
		
		#code = "Settings.Highlight = True;find(__IMG1__).nearby(500).click(__IMG2__)"
		code = "o = Env.getOS(); v = Env.getOSVersion(); print(o); print(v)"
		#code = "s = Env.getSikuliVersion(); print(s)"
		#code = "l = Env.getMouseLocation(); print(l)"
		#code = "popup(\"Hello World\")"
		actionId = self.ADP_GUI.rawAction(rawCode=code, img1=input('IMG_1'), img2=input('IMG_1_1'), description='unknown')
		rsp = self.ADP_GUI.isActionAccepted(timeout=input('TIMEOUT_GUI'), actionId=actionId)
		if not rsp:
			self.step1.setFailed("Unable to get response ")
		else:
			out = rsp.get("GUI", "out")
			self.warning( out )
			self.step1.setPassed("Executing with success: ")
	]]></testdefinition>
<testdevelopment>1458890628.847943</testdevelopment>
</file>